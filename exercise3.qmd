---
title: "exercise3"
format: html
---

##Preperation
```{r}
library(readr)
library(magrittr)
library(sf)
library(lubridate)
```

```{r}
#import own posma data from data folder
posmo <- read_delim("data/posmo_2023-04-05T00_00_00+02_00-2023-05-04T23_59_59+02_00.csv")
#select only important columns which are used for further analysis
posmo <- posmo %>%
  select(datetime, lon_x, lat_y)
#transform posmo data into CRS 2056 (LV03)
posmo <- st_as_sf(posmo, coords = c("lon_x", "lat_y"), crs = 4326, remove = FALSE, na.fail = FALSE) %>%
  st_transform(crs = 2056)
head(posmo)
```

```{r}
#extract coordinates from posmo data
posmo_coord <- st_coordinates(posmo)
#combine the two data sets
posmo <- cbind(posmo, posmo_coord)
#extract one day for analysis
posmo_filtered <- posmo %>%
  filter(as.Date(datetime) == "2023-05-02")
```

##Task 1
```{r}
#calculate distance between points in moving window
posmo_filtered <- posmo_filtered %>%
  mutate(
    n_plus1 = sqrt((lead(X)-X)^2 + (lead(Y)-Y)^2),
    n_plus2 = sqrt((lead(X, 2)-X)^2 + (lead(Y, 2)-Y)^2),
    n_minus1 = sqrt((lag(X)-X)^2 + (lag(Y)-Y)^2),
    n_minus2 = sqrt((lag(X, 2)-X)^2 + (lag(Y, 2)-Y)^2)
  )
#calculate mean distance for moving window
posmo_filtered <- posmo_filtered %>%
  rowwise() %>%
  mutate(
    stepMean = mean(c(n_plus1, n_plus2, n_minus1, n_minus2))
  ) %>%
  ungroup()
```

##Task 2
```{r}
#define static points
posmo_filtered <- posmo_filtered %>%
  mutate(
    static = stepMean < mean(stepMean, na.rm = TRUE)
  )
#remove static points
posmo_nstatic <- posmo_filtered %>%
  filter(!static)
```

##Task 3
```{r}
ggplot(posmo_filtered, aes(X, Y)) +
  geom_point(aes(color=static)) +
  geom_path() +
  coord_equal()
```

##Task 4
```{r}
#definition of function to assign unique IDs
rle_id <- function(vec) {
    x <- rle(vec)$lengths
    as.factor(rep(seq_along(x), times = x))
}
#assign unique IDs
posmo_filtered <- posmo_filtered %>%
  mutate(
    segment_id = rle_id(static)
  )
head(posmo_filtered$segment_id)
#plot segments according to segment ID
ggplot(posmo_filtered, aes(X, Y)) +
  geom_point(aes(color=segment_id)) +
  geom_path() +
  coord_equal()
```

```{r}
#calculate time steps
posmo_filtered <- posmo_filtered %>%
  mutate(
    timestep = as.numeric(difftime(lead(datetime), datetime))
  )
#filter time steps
posmo_filtered %>%
  group_by(segment_id) %>%
  mutate(
    timestep_grouped = sum(timestep)
  ) %>%
  filter(timestep_grouped >= 5*60) %>%
  ggplot(aes(X, Y)) +
  geom_point(aes(color=segment_id)) +
  geom_path() +
  coord_equal()
```
